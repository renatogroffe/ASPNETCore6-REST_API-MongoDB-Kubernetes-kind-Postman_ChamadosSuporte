apiVersion: apps/v1
kind: Deployment
metadata:
  name: testes-apisuporte
spec:
  selector:
    matchLabels:
      app: testes-apisuporte
  replicas: 1
  template:
    metadata:
      labels:
        app: testes-apisuporte
    spec:
      containers:
        - name: mongodb
          image: mongo
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: root
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: MongoDB2022!
          ports:
          - containerPort: 27017
        - name: mongoexpress
          image: mongo-express
          env:
          - name: ME_CONFIG_BASICAUTH_USERNAME
            value: devtests
          - name: ME_CONFIG_BASICAUTH_PASSWORD
            value: MongoExpress2022!
          - name: ME_CONFIG_MONGODB_SERVER
            value: localhost
          - name: ME_CONFIG_MONGODB_PORT
            value: "27017"
          - name: ME_CONFIG_MONGODB_ADMINUSERNAME
            value: root
          - name: ME_CONFIG_MONGODB_ADMINPASSWORD
            value: MongoDB2022!
          ports:
          - containerPort: 8081
        - name: apisuporte
          image: groffeazuredevops.azurecr.io/apisuportemongodb:dev
          imagePullPolicy: Never
          env:
          - name: ConnectionStrings__MongoDB
            valueFrom:
              secretKeyRef:
                name: apisuportesecret
                key: ConnectionMongoDB
          - name: MongoDB__Database
            value: DBChamadosDev
          - name: MongoDB__Collection
            value: ChamadosSuporteDev
          ports:
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: testes-apisuporte-service
spec:
  selector:
    app: testes-apisuporte
  ports:
    - name: apisuporte
      port: 5000
      targetPort: 80
      nodePort: 30080
    - name: mongodb
      port: 27017
      nodePort: 30017
    - name: mongoexpress
      port: 8081
      nodePort: 30081
  type: NodePort